#!/bin/bash
#
#
#
#============================================================================
# vcrelax2scf vcrelax_input vcrelax_output scf_input

#============================================================================

#---------------------------------------------#
# Check if f90nml python library is installed #
#---------------------------------------------#

#-----------------------------------------------------#
# Check if the script takes right number of arguments #
#-----------------------------------------------------#

help_message() {
    printf "Usage: $0 [VCRELAX INPUT FILE] [VCRELAX OUTPUT FILE] [SCF INPUT FILE]\n"
    printf "\n"
    printf "Mandatory Arguments:\n"
    printf "VCRELAX INPUT FILE\t\tInput file for Variable Cell Relaxation calculation.\n"
    printf "VCRELAX OUTPUT FILE\t\tOutput file from Variable Cell Relaxation calculation.\n"
    printf "SCF INPUT FILE\t\t\tInput file for SCF calculation\n"
    printf "\t\t\t\t(File content will be generated by this code)\n"
    
    printf "Optional Arguments:\n"
    printf "\t -h, --help\t\tshows this help message and exits\n"
    printf "\t -v, --version\t\tshows program version and exits\n"
}

version() {
    printf "$1 1.0.0\nFor more information contact <rajeshprasanth@rediffmail.com>\n"
}

if [  $# -ne 3  ]; then
    if [ $1 == "-h" ]; then
    help_message && exit 1
    elif [ $1 == "--help" ];then
        help_message && exit 1
    elif [ $1 == "-v" ];then
        version $0 && exit 1
    elif [ $1 == "--version" ];then
        version $0 && exit 1
    else
        help_message && exit 1
    fi
    else
    #------------------------------------#
    # Assigning filenames from arguments #
    #------------------------------------#
    vcrelax_input=$1
    vcrelax_output=$2
    scf_input=$3
    
    test -f $vcrelax_input
    if [  $? != 0 ];then
        printf "$1 not found !\nTerminating script\n" && exit 1
    fi
    test -f $vcrelax_output
    if [  $? != 0 ];then
        printf "$2 not found !\nTerminating script\n" && exit 1
    fi
    command -v f90nml > /dev/null
    if [  $? != 0 ];then
        printf "The python library f90nml not found." && exit 1
    fi
    
    
    #---------------------------#
    # Update "CONTROL" namelist #
    #---------------------------#
    f90nml $vcrelax_input -g control -v calculation='scf' -o /tmp/tempfilexyz

    #--------------------------------------------------------------------------#
    # Update "SYSTEM" namelist                                                 #
    # Overide ibrav to 0;celldm(1:6) to 0.0 and A,B,C,cosAB,cosAC,cosBC to 0.0 #
    #--------------------------------------------------------------------------#

    f90nml /tmp/tempfilexyz -g system -v ibrav=0 -v celldm\(1\)=0.0,celldm\(2\)=0.0,celldm\(3\)=0.0,celldm\(4\)=0.0,celldm\(5\)=0.0,celldm\(6\)=0.0 -v A=0.0,B=0.0,C=0.0,cosAB=0.0,cosBC=0.0,cosAC=0.0 -o $scf_input

    #-----------------------------#
    # Reading somemore parameters #
    #-----------------------------#

    ntyp=`grep -i ntyp $vcrelax_input|gawk -F= '{print $2}'`
    nat=`grep -i nat $vcrelax_input|gawk -F= '{print $2}'`

    #-------------------------#
    # Printing Atomic Species #
    #-------------------------#

    echo "" >> $scf_input
    grep ATOMIC_SPECIES -A $ntyp $vcrelax_input >> $scf_input

    #--------------------------#
    # Printing Cell Parameters #
    #--------------------------#
    echo "" >> $scf_input
    sed -n /"Begin final coordinates"/,/"End final coordinates"/p $vcrelax_output |grep CELL_PARAMETERS -A $ntyp|sed s/\(/{/g|sed s/\)/}/g >> $scf_input

    #---------------------------#
    # Printing Atomic Positions #
    #---------------------------#

    echo "" >> $scf_input
    sed -n /"Begin final coordinates"/,/"End final coordinates"/p $vcrelax_output |grep ATOMIC_POSITIONS -A $nat|sed s/\(/{/g|sed s/\)/}/g >> $scf_input

    #-------------------#
    # Printing K Points #
    #-------------------#

    echo "" >> $scf_input
    grep K_POINTS -A 2 $vcrelax_input|sed s/\(/{/g|sed s/\)/}/g >> $scf_input
fi

   

#if [ $# -ne 3 ]
#then
   
#fi

